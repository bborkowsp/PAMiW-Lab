@using Blazored.LocalStorage;
@using System.Security.Claims;
@inherits LayoutComponentBase


@inject ILanguageService LanguageService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">

            <AuthorizeView>
                <Authorized>

                    <div>
                        @context.User.Identity.Name |
                        @LanguageService.GetLanguage(MainLayout.Language, context.User.Claims.Where(c => c.Type == ClaimTypes.Role).FirstOrDefault().Value)
                        @context.User.Claims.Where(c => c.Type == "DateCreated").FirstOrDefault().Value
                    </div>

                    <a href="#" @onclick="Logout">@LanguageService.GetLanguage(MainLayout.Language, "Logout")</a>
                </Authorized>
                <NotAuthorized>
                    <a href="/login">@LanguageService.GetLanguage(MainLayout.Language, "Login")</a>
                    <a href="/register">@LanguageService.GetLanguage(MainLayout.Language, "Register")</a>
                </NotAuthorized>
            </AuthorizeView>


            <a href="https://docs.microsoft.com/aspnet/" target="_blank">@LanguageService.GetLanguage(MainLayout.Language, "About") </a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {

    public static string Language = "english";

    private async Task Logout()
    {
        await LocalStorageService.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/login");
    }

}