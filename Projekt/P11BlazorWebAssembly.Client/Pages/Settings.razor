@page "/settings"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Web.Extensions

@inject ILanguageService LanguageService
@inject IJSRuntime JSRuntime
@inject ILocalStorageService LocalStorage


@if (selectedLanguage != null)
{
<div class="container">
    <h3>@LanguageService.GetLanguage(selectedLanguage, "SettingsTitle")</h3>
    <p>@LanguageService.GetLanguage(selectedLanguage, "ChooseLanguageLabel"):</p>
    <select class="form-control" @bind="language">
        <option value="polish">@LanguageService.GetLanguage(selectedLanguage, "PolishOption")</option>
        <option value="english">@LanguageService.GetLanguage(selectedLanguage, "EnglishOption")</option>
    </select>
    <button class="btn btn-primary mt-3" @onclick="SaveLanguage">@LanguageService.GetLanguage(selectedLanguage, "SaveButton")</button>

     <p>Choose Theme:</p>
    <select class="form-control" @bind="selectedTheme">
        <option value="light">Light Theme</option>
        <option value="dark">Dark Theme</option>
    </select>
    <button class="btn btn-primary mt-3" @onclick="SaveTheme">Save Theme</button>
</div>
}
@code {
    private string language;
    private string selectedLanguage;
        private string selectedTheme;


    protected override async Task OnInitializedAsync()
    {
        selectedLanguage = await LocalStorage.GetItemAsync<string>("language") ?? "english";
        language = selectedLanguage;
        selectedTheme = await LocalStorage.GetItemAsync<string>("theme") ?? "light";

    }

    private async Task SaveLanguage()
    {
        MainLayout.Language = language;
        await LocalStorage.SetItemAsync("language", MainLayout.Language);
        JSRuntime.InvokeVoidAsync("location.reload");
    }

        private async Task SaveTheme()
    {
        await LocalStorage.SetItemAsync("theme", selectedTheme);
        await JSRuntime.InvokeVoidAsync("themeSwitcher.setTheme", selectedTheme);
    }
}
